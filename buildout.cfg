[buildout]
extends =
    https://zopefoundation.github.io/Zope/releases/5.13/versions-prod.cfg
    versions.cfg

parts =
    zeo-master
    instance
    instance1
    instance2
    instance3
    instance4
    supervisor
    sagl
    omelette
    zopepy
    import
    extensions
    autostart
    restart-celery
    restart-instances
    restart-soffice
    tmpcronjob
    pack-semanal
    backupcronjob1
    backupcronjob2
    backup
    backup_documentos
    chown

extensions = 
    mr.developer

package-name = openlegis.sagl

zcml = ${buildout:package-name}

abi-tag-eggs = false

auto-checkout = 
     openlegis.sagl
     openlegis.recipe.sagl
     Products.CMFDefault
     trml2pdf

develop =

effective-user = zope

eggs =
    appy
    asn1crypto
    decorator
    five.grok
    html2rml
    lxml
    mechanize
    ndg-httpsclient
    openlegis.sagl
    Pillow
    Products.CMFCore
    Products.CMFDefault
    Products.CMFUid
    Products.DCWorkflow
    Products.ExternalEditor
    Products.ExternalMethod    
    Products.MailHost
    Products.PluggableAuthService
    Products.PortalTransforms
    Products.Sessions
    Products.SiteErrorLog
    Products.TemporaryFolder
    Products.ZMySQLDA
    Products.ZODBMountPoint
    pyasn1
    pypdf
    python-barcode
    python-dateutil
    qrcode
    reportlab
    requests
    sgmllib3k
    simplejson
    six
    tempstorage
    trml2pdf
    Werkzeug
    wheel
    z3c.autoinclude
    zLOG
    zope.app.container
    zope.file
    ZopeUndo
    z3c.saconfig
    zope.sqlalchemy
    sqlalchemy
    mysqlclient
    pymysql
    celery[redis]
    aiofiles
    openpyxl
    pikepdf
    
[sources]
openlegis.sagl = git https://github.com/openlegis-br/openlegis.sagl.git
openlegis.recipe.sagl = fs openlegis.recipe.sagl
Products.CMFDefault = fs Products.CMFDefault
trml2pdf = fs trml2pdf

[zeo-master]
recipe = plone.recipe.zeoserver[zrs]
effective-user = ${buildout:effective-user}
replicate-to = 8501
zeo-address = 127.0.0.1:8500
zeo-var = ${buildout:directory}/var
pack-days = 0
pack-keep-old = false
cache-size = 128MB
blob-cache-size = 64MB
eggs =
    ${buildout:eggs}
zeo-conf-additional = 
    <filestorage sapl_documentos>
      path ${zeo-master:zeo-var}/filestorage/sapl_documentos.fs
    </filestorage>   
eggs =
    ${buildout:eggs}
    ZopeUndo
    zc.zrs
    zope.file

[instance]
recipe = plone.recipe.zope2instance
http-address = 8080
http-fast-listen = off
zeo-client = on
zeo-address =  ${zeo-master:zeo-address}
eggs = ZopeUndo
user = admin:openlegis
effective-user = ${buildout:effective-user}
zodb-temporary-storage = on
debug-mode = off
access-log-handler = logging.handlers.RotatingFileHandler
access-log-args  = (r"${buildout:directory}/var/log/instance-access.log", "a")
access-log-kwargs = {"maxBytes": 10000000, "backupCount": 5}
event-log-handler = logging.handlers.TimedRotatingFileHandler
event-log-args = (r"${buildout:directory}/var/log/instance.log", )
event-log-kwargs = {"when": "D", "interval": 1}
eggs =
    ${buildout:eggs}
zope-conf-additional =
    <zodb_db sapl_documentos>
      <zeoclient>
        server ${zeo-master:zeo-address}
        storage sapl_documentos
        name sapl_documentos
      </zeoclient>
      mount-point /sagl/sapl_documentos
      container-class OFS.Folder.Folder
    </zodb_db>
  <dos_protection>
    form-memory-limit 4MB
  </dos_protection>

environment-vars =
    PYTHON_EGG_CACHE ${buildout:directory}/var/.python-eggs
    TEMP ${buildout:directory}/var/tmp
    TMP ${buildout:directory}/var/tmp
    INSTALL_HOME ${buildout:directory}
    PTS_LANGUAGES en, es, pt-br
    zope_i18n_allowed_languages en, es, pt-br
    zope_i18n_compile_mo_files true
    TZ America/Sao_Paulo

zcml-additional =
  <configure xmlns="http://namespaces.zope.org/db">
    <include package="z3c.saconfig" file="meta.zcml" />
    <engine name="meu_db" url="mysql+pymysql://root:openlegis@127.0.0.1/openlegis" />
    <session name="minha_sessao" engine="meu_db" />
  </configure>


eggs =
    ${buildout:eggs}

zcml =
    ${buildout:zcml}

[instance1]
<=instance
http-address = 8081
access-log-args  = (r"${buildout:directory}/var/log/instance1-access.log", "a")
event-log-args = (r"${buildout:directory}/var/log/instance1.log", )

[instance2]
<=instance
http-address = 8082
access-log-args  = (r"${buildout:directory}/var/log/instance2-access.log", "a")
event-log-args = (r"${buildout:directory}/var/log/instance2.log", )

[instance3]
<=instance
http-address = 8083
access-log-args  = (r"${buildout:directory}/var/log/instance3-access.log", "a")
event-log-args = (r"${buildout:directory}/var/log/instance3.log", )

[instance4]
<=instance
http-address = 8084
access-log-args  = (r"${buildout:directory}/var/log/instance4-access.log", "a")
event-log-args = (r"${buildout:directory}/var/log/instance4.log", )

[supervisor]
recipe = collective.recipe.supervisor
plugins = superlance
port = 9001
user = openlegis
password = openlegis
serverurl = http://127.0.0.1:9001
programs =
    5  celery     (autorestart=true) ${buildout:directory}/bin/celery [-A tasks worker -Q celery,prefeitura --loglevel=info]
    10 zeo-master (autostart=true) ${buildout:directory}/bin/zeo-master [fg] false  ${buildout:effective-user}
    15 soffice    (autorestart=true) /usr/lib/libreoffice/program/soffice [--headless --nologo --nodefault --nofirststartwizard "--accept=socket,host=0.0.0.0,port=2002;urp;"] true 
    20 instance   (autostart=true startsecs=3)   ${buildout:directory}/bin/instance   [console -t 2]  true ${buildout:effective-user}
    30 instance1  (autostart=true startsecs=5)   ${buildout:directory}/bin/instance1  [console -t 2]  true ${buildout:effective-user}
    40 instance2  (autostart=true startsecs=5)   ${buildout:directory}/bin/instance2  [console -t 2]  true ${buildout:effective-user}
    50 instance3  (autostart=true startsecs=5)   ${buildout:directory}/bin/instance3  [console -t 2]  true ${buildout:effective-user}
    60 instance4  (autostart=true startsecs=5)   ${buildout:directory}/bin/instance4  [console -t 2]  true ${buildout:effective-user}
eventlisteners =
    services_memmon (autostart=false) TICK_3600 ${buildout:bin-directory}/memmon [-g services=8GB]
    instances_memmon (startsecs=10) TICK_3600 ${buildout:bin-directory}/memmon [-g instances=4GB]
groups =
    10 services zeo-master,soffice,celery
    20 instances instance,instance1,instance2,instance3,instance4

logfile = ${buildout:directory}/var/log/supervisord.log
logfile-maxbytes = 1MB
logfile-backups = 1
loglevel = info
pidfile = ${buildout:directory}/var/supervisord.pid
nodaemon = false

[sagl]
recipe = openlegis.recipe.sagl
sagl-id = sagl
admin-user = admin
mysql-user = root
mysql-pass = openlegis
mysql-db = openlegis
mysql-host = localhost
container-path = /sagl/sapl_documentos
add-mountpoint = on

[extensions]
recipe = plone.recipe.command
command = cp -r ${buildout:directory}/src/openlegis.sagl/openlegis/sagl/Extensions ${buildout:directory}/parts/instance/

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

[import]
recipe = plone.recipe.command
command = cp ${buildout:directory}/src/openlegis.sagl/import/*.zexp ${buildout:directory}/var/instance/import/

[chown]
recipe = plone.recipe.command
command = chown -R ${buildout:effective-user}:${buildout:effective-user} ${buildout:directory}

[autostart]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:directory}/bin/supervisord

[restart-celery]
recipe = z3c.recipe.usercrontab
times = 0 */6 * * *
command = ${buildout:directory}/bin/supervisorctl restart services:celery

[restart-instances]
recipe = z3c.recipe.usercrontab
times = 0 1 * * *
command = ${buildout:directory}/bin/supervisorctl restart instances:

[restart-soffice]
recipe = z3c.recipe.usercrontab
times = 0 */4 * * *
command =  ${buildout:directory}/bin/supervisorctl restart services:soffice

[tmpcronjob]
recipe = z3c.recipe.usercrontab
times = 0 */8 * * *
command = rm -rf ${buildout:directory}/var/tmp/processo_*

[pack-semanal]
recipe = z3c.recipe.usercrontab
times = 0 4 * * 7
command = ${buildout:directory}/bin/zeopack

[backupcronjob1]
recipe = z3c.recipe.usercrontab
times = 00 23 * * *
command = ${buildout:directory}/bin/backup

[backupcronjob2]
recipe = z3c.recipe.usercrontab
times = 10 23 * * *
command = ${buildout:directory}/bin/backup_documentos

[backup]
recipe = collective.recipe.backup
keep = 1
debug = false
backup_blobs = false
pre_command = echo 'Gerando backup do Data.fs'
post_command = echo 'Backup gerado com sucesso!'

[backup_documentos]
recipe = collective.recipe.backup
location = ${buildout:directory}/var/backups_sapl_documentos
keep = 1
datafs = ${buildout:directory}/var/filestorage/sapl_documentos.fs
full = true
debug = false
backup_blobs = false
pre_command = echo 'Gerando backup do sapl_documentos.fs'
post_command =
    echo 'Backup gerado com sucesso!'
